setcps(113/60/4)

-- Open Carabiner First. To Tidal Link
-- sock <- carabiner tidal 4 (-0.20)

creise =
    fix (spreadr ($) [density 2, rev, slow 2, striate 3, (# speed ( choose [0.75,0.5,1,1.5]) )]) (n "2 4 8 16")
o3r = once $
    "dummy"
    # tape 0 # trate 0.25 # tphase 0 # tdepth 0.5 # toffset 0.5
    # wah 0 # wrate 1 # depth 0.75 # sinsaw 0 # jfreq 1 # jdepth 0.1
    # llfo 0 # sisap 0 # lrate 0 # iphase 0.5 # midfreq 60 # hifreq 20000
    # comp 0 # cctrl 1 # thresh 0.5 # clamp 0.01 # relax 0.1 
    # ampFin 1 # postAmp 1 
    # orbit 3
o0r = once $
    "dummy"
    # tape 0 # trate 0.25 # tphase 0 # tdepth 0.5 # toffset 0.5
    # wah 0 # wrate 1 # depth 0.75 # sinsaw 0 # jfreq 1 # jdepth 0.1
    # llfo 0 # sisap 0 # lrate 0 # iphase 0.5 # midfreq 60 # hifreq 20000
    # comp 0 # cctrl 1 # thresh 0.5 # clamp 0.01 # relax 0.1 
    # ampFin 1 # postAmp 1 
    # orbit 0
orbr x =
    once $
    fix (
        (# wet50 0).(# wet60 1)
    ) (orbit 3) $
    "dummy"
    # pitch 0 # pideg 0 # tdisp 0.1 # pdisp 0.05
    # tape 0 # trate 0.25 # tphase 0 # tdepth 0.5 # toffset 0.5
    # wah 0 # wrate 1 # depth 0.75 # sinsaw 0 # jfreq 1 # jdepth 0.1
    # llfo 0 # sisap 0 # lrate 0 # iphase 0.5 # midfreq 60 # hifreq 20000
    # comp 0 # cctrl 1 # thresh 0.5 # clamp 0.01 # relax 0.1 
    # ampFin 1 # postAmp 1 
    +| orbit x
-- reset all orbs
orbar =
    orbr "[0 1 2 3]"
-- lfoClose = once $
    -- "dummy"
    -- # llfo 1 # sisap 0 # lrate 0 # iphase 1 # midfreq 60 # hifreq 200
-- lfoOpen = once $
    -- sound "lfoOpen"
verbr x =
    once $
    "dummy"
    # vwet 0.2
    # vdry 1
    # vdelay 0.1
    # vsize 0.6
    # vlocut 0.7
    # vhicut 0.25
    +| orbit x
verbar = verbr "[0 1 2 3]"
-- acid parameters
-- cutoff
-- reson
-- sweept
-- envmod
-- envatt
-- envdec
-- accdec
-- envacc
acidcof =
    p "acidcof" $
    (12.6 ~>) $ 
    acutoff (
        ( slow 64 $ range 0.06 0.93 sine )
        + ( slow 8 $ range "-0.06" 0.06 tri )
        ) # "dummy"
acidres =
    p "acidres" $
    (64 ~>) $ 
    areson ( slow 76 $ ( 1 - tri) ) # "dummy"
acidenm =
    p "acidenm" $
    (32 ~>) $
    aenvmod (
        ( slow 0.5 ( range 0.5 0.75 tri) )
        + ( slow 132 $ range "-0.5" 0.25 sine )
    ) # "dummy"
acidatt =
    p "acidatt" $
    (12.6 ~>) $ 
    aenvatt (
        ( slow 48 $ range 0.125 0.25 saw )
        + ( slow 4 $ range "-0.033" 0.033 tri )
        ) # "dummy"
aciddec =
    p "aciddec" $
    (12.6 ~>) $ 
    aenvdec (
        ( slow 96 $ range 0.086 0.97 saw )
        + ( slow 6 $ range "-0.03" 0.03 tri )
        ) # "dummy"
acidacd =
    p "acidacd" $
    (36 ~>) $ 
    aaccdec (
        ( slow 112 $ range 0.086 0.97 tri )
        + ( slow 4 $ range "-0.03" 0.03 tri )
        ) # "dummy"
acideac =
    p "acideac" $
    (19.84 ~>) $ 
    aenvacc (
        ( slow 84 $ range 0 0.73 sine )
        * ( slow 12 $ tri )
        + 0.23
        ) # "dummy"
acidmod =
    do
    acidcof
    acidres
    acidenm
    acidatt
    acidacd
    acideac
    aciddec
acidmstop =
    do
    p "acidcof" silence
    p "acidres" silence
    p "acidenm" silence
    p "acidatt" silence
    p "acidacd" silence
    p "acideac" silence
    p "aciddec" silence
acidcomp =
    once $
    "dummy"
    # wet10 0.5
    # wet50 1
    -- # slopea 0.33
    # postAmp 2
    # orbit 3
acidr =
    once $
    "acid"
    # acutoff 25
    # areson 20
    # asweept 64
    # aenvmod 64
    # aenvatt 12
    # aenvdec 7
    # aaccdec 7
    # aenvacc 30
submarino =
    p "submarino" $
        seqPLoop[
            (0, 8,
                "dummy"
            ),
            (8, 16,
                sound "feelfx"
                |+| n "[0!3 2]/4"
                # tremolorate (slow 4 $ "2 8 4 3 1.5")
                # tremolodepth 1
                # pan (slow 5 $ "0 0.75 0.5 0.25 1‚Äù)")
                # orbit 3
            )
        ]
-- talnoise parameters
-- reson x = ccv x # ccn 3
-- sweept x = ccv x # ccn 4
-- envmod x = ccv x # ccn 5
-- envatt x = ccv x # ccn 6
-- envdec x = ccv x # ccn 7
-- accdec x = ccv x # ccn 8
-- envacc x = ccv x # ccn 9

TODO: tape0 x y z w= once $ tape x # trate y
TODO: verb away / verb front

let lfo1rate = pF "lfo1rate"
